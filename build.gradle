plugins {
	id 'org.springframework.boot' version '2.5.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.moowork.node" version "1.3.1"
}
apply plugin: "com.moowork.node"

group = 'com.parknnna'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	//tomcat
	compile 'org.apache.tomcat.embed:tomcat-embed-jasper' 
	
	//jstl
	compile 'javax.servlet:jstl:1.2'
	
	//tiles
	compile group: 'org.apache.tiles', name: 'tiles-jsp', version: '3.0.7'

	//lombok
	compile "org.projectlombok:lombok:1.16.6"

	// MyBatis
    compile("org.springframework.boot:spring-boot-starter-jdbc:2.0.1.RELEASE")
    compile("org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.1")
    compile("org.mybatis:mybatis-spring:1.3.1")
    compile("org.mybatis:mybatis:3.4.5")
	compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.4.1'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client' 
	
}

test {
	useJUnitPlatform()
}
def webappDir = "$projectDir/frontend/web"

task appNpmInstall(type: NpmTask) {
    workingDir = file("${webappDir}")
    args = ["run", "build"]
}

task copyWebApp(type: Copy) {
    from 'frontend/web/build'
    into "build/resources/main/static"
}

copyWebApp.dependsOn(appNpmInstall)
compileJava.dependsOn(copyWebApp)


